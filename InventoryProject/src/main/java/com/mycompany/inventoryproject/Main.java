/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.inventoryproject;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.reflect.TypeToken;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.TableRowSorter;
import javax.swing.RowFilter;

/**
 *
 * @author lopez
 */
public class Main extends javax.swing.JFrame {

    List<Product> product = new ArrayList<>();
    TableRowSorter<ModelProductInvTable> tableRowSorter = new TableRowSorter<>();   
    
    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        readFile();
        initObjects();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnBackground = new javax.swing.JPanel();
        lblProduct = new javax.swing.JLabel();
        txtProduct = new javax.swing.JTextField();
        lblPrice = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        lblStock = new javax.swing.JLabel();
        txtStock = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        lblSearch = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        spnProduct = new javax.swing.JScrollPane();
        tblProduct = new javax.swing.JTable();
        btnRemove = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnBackground.setBackground(new java.awt.Color(72, 84, 96));
        pnBackground.setLayout(null);

        lblProduct.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblProduct.setForeground(new java.awt.Color(255, 255, 255));
        lblProduct.setText("Product Name");
        pnBackground.add(lblProduct);
        lblProduct.setBounds(30, 30, 100, 20);
        pnBackground.add(txtProduct);
        txtProduct.setBounds(160, 20, 150, 30);

        lblPrice.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblPrice.setForeground(new java.awt.Color(255, 255, 255));
        lblPrice.setText("Price");
        pnBackground.add(lblPrice);
        lblPrice.setBounds(30, 70, 100, 20);
        pnBackground.add(txtPrice);
        txtPrice.setBounds(160, 60, 150, 30);

        lblStock.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblStock.setForeground(new java.awt.Color(255, 255, 255));
        lblStock.setText("Stock");
        pnBackground.add(lblStock);
        lblStock.setBounds(30, 110, 100, 20);
        pnBackground.add(txtStock);
        txtStock.setBounds(160, 100, 150, 30);

        btnAdd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        pnBackground.add(btnAdd);
        btnAdd.setBounds(130, 150, 72, 27);

        lblSearch.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblSearch.setForeground(new java.awt.Color(255, 255, 255));
        lblSearch.setText("Search");
        pnBackground.add(lblSearch);
        lblSearch.setBounds(400, 20, 60, 20);
        pnBackground.add(txtSearch);
        txtSearch.setBounds(470, 20, 150, 30);

        btnSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        pnBackground.add(btnSearch);
        btnSearch.setBounds(630, 20, 72, 27);

        tblProduct.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblProduct.setRowSelectionAllowed(false);
        tblProduct.getTableHeader().setReorderingAllowed(false);
        spnProduct.setViewportView(tblProduct);

        pnBackground.add(spnProduct);
        spnProduct.setBounds(40, 200, 673, 285);

        btnRemove.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });
        pnBackground.add(btnRemove);
        btnRemove.setBounds(270, 150, 79, 27);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnBackground, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 752, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnBackground, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        Product pr = new Product();
        ModelProductInvTable productModel = (ModelProductInvTable) this.tblProduct.getModel();
        pr.setProductName(txtProduct.getText());
        
        try{          
            pr.setPrice(Double.parseDouble(txtPrice.getText()));      /*Convert */
            pr.setStock(Integer.parseInt(txtStock.getText()));          /*Try Catch for any format error*/
        }catch(NumberFormatException e){
            System.out.println("Error: Invalid Price or Stock format");
            return;
        }
        
        try {
            double price = Double.parseDouble(txtPrice.getText());
            int stock = Integer.parseInt(txtStock.getText());
            if (price <= 0 || stock <= 0) {
                throw new IllegalArgumentException("Error: Price or Stock must be a positive value.");
            }
            pr.setPrice(price);
            pr.setStock(stock);
        } catch (IllegalArgumentException e) {
            System.out.println(e.getMessage());
            return;
        }
        
        productModel.addProduct(pr);
        clearFields();
        
        saveProductsInv();
        
        
        
        
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
      
      RowFilter<ModelProductInvTable, Integer> rowFilter = RowFilter.regexFilter(txtSearch.getText(),0);
      tableRowSorter.setRowFilter(rowFilter);
      
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        ModelProductInvTable productInvTable = (ModelProductInvTable)this.tblProduct.getModel();
        productInvTable.removeInvProduct();
    }//GEN-LAST:event_btnRemoveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });        
    }
    
    private void clearFields(){
        txtProduct.setText("");
        txtPrice.setText("");               /*Clear text field*/
        txtStock.setText("");
    }
    private void initObjects(){
       
        ModelProductInvTable model = new ModelProductInvTable(this.product);
        tableRowSorter = new TableRowSorter<>(model);
        tblProduct.setRowSorter(tableRowSorter);
        tblProduct.setModel(model);
    }
    
    private void saveProductsInv(){
        
        Gson gson = new GsonBuilder().create();
        String json = gson.toJson(this.product);
        
        try (FileWriter fileWriter = new FileWriter("ProductsInventory.json")){
            fileWriter.write(json);
            fileWriter.close();
            System.out.println("Succesfully save: Product list");
        }catch (IOException e){
            System.err.println("Error saving product list to JSON: " + e.getMessage());
        }
    }
    
    private void readFile(){
        try{
            Gson gson = new GsonBuilder().create();
            FileReader fileReader = new FileReader("ProductsInventory.json");
            
            java.lang.reflect.Type typeListProducts = new TypeToken<List<Product>>(){
            }.getType();
            
            this.product = gson.fromJson(fileReader, typeListProducts);
        }catch (IOException e){
            System.err.println("Error reading JSON file: " + e.getMessage());
        }
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblProduct;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblStock;
    private javax.swing.JPanel pnBackground;
    private javax.swing.JScrollPane spnProduct;
    private javax.swing.JTable tblProduct;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtProduct;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtStock;
    // End of variables declaration//GEN-END:variables
}
